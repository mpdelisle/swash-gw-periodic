/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.7.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0";
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    inlet
    {
        type            waveVelocity;
        waveDictName    waveDict;
        value           uniform (0 0 0);
    /*
	    type            fixedValue;
        value           uniform (0 0 0);
	*/
	}
    atmosphere
    {
        type            pressureInletOutletVelocity;
        value           uniform (0 0 0);
    }
    bottom
    {
        type            fixedValue;
        value           uniform (0 0 0);
    }
    slope
    {
        type            fixedValue;
        value           uniform (0 0 0);
    }
    defaultFaces
    {
        type            empty;
    }
    outlet
    {
	/*
        type            waveAbsorption2DVelocity;
        nPaddles        1;
        nEdgeMin        0;
        nEdgeMax        0;
        absorptionDir   400;
        value           uniform (0 0 0);
    */
	    type            fixedValue;
        value           uniform (0 0 0);
	}
    topLeft //inlet
    {
	    type            waveVelocity;
        waveDictName    waveDict;
        value           uniform (0 0 0);
		/*
		type            fixedValue;
        value           uniform (0 0 0);
		*/
	}
    topRight //atmosphere
    {
        type            pressureInletOutletVelocity;
        value           uniform (0 0 0);
    }
    botLeft //bottom
    {
        type            fixedValue;
        value           uniform (0 0 0);
    }
    botRight //outlet
    {
	/*
        type            waveAbsorption2DVelocity;
        nPaddles        1;
        nEdgeMin        0;
        nEdgeMax        0;
        absorptionDir   400;
        value           uniform (0 0 0);
    */
	    type            fixedValue;
        value           uniform (0 0 0);	
	}
}


// ************************************************************************* //
